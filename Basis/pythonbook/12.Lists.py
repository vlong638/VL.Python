from copy import deepcopy
import PrintHelper
PrintHelper.PrintTitle('List Basics')
print('list使用[@item,@itemN]的形式表示')
print('list的类型')
PrintHelper.PrintCode('t=[\"apple\",\"banana\"]')
PrintHelper.PrintCode('print(type(t))')
t=["apple","banana"]
print(type(t))
print('list的数据项是有序的,可以使用list[index]进行访问')
print('可以使用for和while对list进行遍历')
PrintHelper.PrintSubtitle('示例for')
PrintHelper.PrintCode('t=[\"apple\",\"banana\"]')
PrintHelper.PrintCode('for item in t:')
PrintHelper.PrintCode('    print(item)')
t=["apple","banana"]
for item in t:
    print(item)
PrintHelper.PrintSubtitle('示例while')
PrintHelper.PrintCode('t=[\"apple\",\"banana\"]')
PrintHelper.PrintCode('i=0')
PrintHelper.PrintCode('while i<len(t):')
PrintHelper.PrintCode('    print(t[i])')
PrintHelper.PrintCode('    i+=1')
t=["apple","banana"]
i=0
while i<len(t):
    print(t[i])
    i+=1
print('可以对list使用max(),min(),sum()等函数')
PrintHelper.PrintCode('ti=[12,3,4,55,7,8,89]')
PrintHelper.PrintCode('print(max(ti))')
PrintHelper.PrintCode('print(min(ti))')
PrintHelper.PrintCode('print(sum(ti))')
ti=[12,3,4,55,7,8,89]
print(max(ti))
print(min(ti))
print(sum(ti))
print('可以使用in操作符检查list是否包含某一个元素')
PrintHelper.PrintCode('ti=[12,3,4,55,7,8,89]')
PrintHelper.PrintCode('print(3 in ti)')
ti=[12,3,4,55,7,8,89]
print(3 in ti)
PrintHelper.PrintTitle('List Are Mutable')
PrintHelper.PrintSubtitle('list数据项是可改的')
PrintHelper.PrintCode('t=[1,2,3]')
PrintHelper.PrintCode('print(t)')
t=[1,2,3]
print(t)
PrintHelper.PrintCode('t[0]=\"apple\"')
PrintHelper.PrintCode('t[1]=\"banana\"')
PrintHelper.PrintCode('t[2]=\"orange\"')
PrintHelper.PrintCode('print(t)')
t[0]="apple"
t[1]="banana"
t[2]="orange"
print(t)
PrintHelper.PrintTitle('List And Operators')
PrintHelper.PrintSubtitle('list可以使用+,*操作符')
PrintHelper.PrintCode('t1=[\"apple\",\"banana\"]')
t1=["apple","banana"]
PrintHelper.PrintCode('print(t1)')
print(t1)
PrintHelper.PrintCode('t2=[1,2,3]')
t2=[1,2,3]
PrintHelper.PrintCode('print(t2)')
print(t2)
PrintHelper.PrintCode('t3=t1+t2')
t3=t1+t2
PrintHelper.PrintCode('print(t3)')
print(t3)
PrintHelper.PrintCode('t4=t1*3')
t4=t1*3
PrintHelper.PrintCode('print(t4)')
print(t4)
PrintHelper.PrintTitle('List Methods')
PrintHelper.PrintSubtitle('append')
PrintHelper.PrintCode('t=[\"apple\",\"banana\"]')
t=["apple","banana"]
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintCode('t.append(\"orange\")')
t.append("orange")
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintSubtitle('extend')
PrintHelper.PrintCode('t=[\"apple\",\"banana\"]')
t=["apple","banana"]
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintCode('t.extend([1,2,3])')
t.extend([1,2,3])
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintSubtitle('insert')
PrintHelper.PrintCode('t=[\"apple\",\"banana\",\"orange\"]')
t=["apple","banana","orange"]
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintCode('t.insert(1,\"watermelon\")')
t.insert(1,"watermelon")
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintSubtitle('remove')
PrintHelper.PrintCode('t=[\"apple\",\"banana\",\"orange\"]')
t=["apple","banana","orange"]
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintCode('t.remove(\"banana\")')
t.remove("banana")
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintSubtitle('pop')
PrintHelper.PrintCode('t=[\"apple\",\"banana\",\"orange\"]')
t=["apple","banana","orange"]
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintCode('item=t.pop(2)')
item=t.pop(2)
PrintHelper.PrintCode('print(item)')
print(item)
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintSubtitle('count')
PrintHelper.PrintCode('t=[\"apple\",\"banana\",\"orange\",\"banana\",\"orange\"]')
t=["apple","banana","orange","banana","orange"]
PrintHelper.PrintCode('print(t.count(\"banana\"))')
print(t.count("banana"))
PrintHelper.PrintSubtitle('sort')
PrintHelper.PrintCode('t=[45,26,3,24,5]')
t=[45,26,3,24,5]
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintCode('t.sort()')
t.sort()
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintSubtitle('reverse')
PrintHelper.PrintCode('t=[\"apple\",2,3,\"banana\",\"orange\"]')
t=["apple",2,3,"banana","orange"]
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintCode('t.reverse()')
t.reverse()
PrintHelper.PrintCode('print(t)')
print(t)
PrintHelper.PrintTitle('aliasing')
PrintHelper.PrintCode('fruitlist = [\"apple\", \"banana\", \"cherry\", \"durian\"]')
fruitlist = ["apple", "banana", "cherry", "durian"]
PrintHelper.PrintCode('newfruitlist = fruitlist')
newfruitlist = fruitlist
PrintHelper.PrintCode('print( fruitlist )')
print( fruitlist )
PrintHelper.PrintCode('print( newfruitlist )')
print( newfruitlist )
PrintHelper.PrintCode('newfruitlist[2] = \"orange\"')
newfruitlist[2] = "orange"
PrintHelper.PrintCode('print( fruitlist )')
print( fruitlist )
PrintHelper.PrintCode('print( newfruitlist )')
print( newfruitlist )
PrintHelper.PrintSubtitle('Shallow vs. deep copies')
PrintHelper.PrintSubtitle('Shallow')
PrintHelper.PrintCode('a=[\"apple\",[1,2,3]]')
a=["apple",[1,2,3]]
PrintHelper.PrintCode('b=a[:]')
b=a[:]
PrintHelper.PrintCode('b[0]=\"orange\"')
b[0]="orange"
PrintHelper.PrintCode('b[1][0]=100')
b[1][0]=100
PrintHelper.PrintCode('print(a)')
print(a)
PrintHelper.PrintCode('print(b)')
print(b)
PrintHelper.PrintSubtitle('deep copies')
PrintHelper.PrintCode('a=[\"apple\",[1,2,3]]')
a=["apple",[1,2,3]]
PrintHelper.PrintCode('b=deepcopy(a)')
b=deepcopy(a)
PrintHelper.PrintCode('b[0]=\"orange\"')
b[0]="orange"
PrintHelper.PrintCode('b[1][0]=100')
b[1][0]=100
PrintHelper.PrintCode('print(a)')
print(a)
PrintHelper.PrintCode('print(b)')
print(b)
PrintHelper.PrintTitle('ListCasting')
PrintHelper.PrintCode('numList=range(1,11)')
numList=range(1,11)
PrintHelper.PrintCode('print(numList)')
print(numList)
PrintHelper.PrintCode('print(type(numList))')
print(type(numList))
PrintHelper.PrintCode('numList=list(numList)')
numList=list(numList)
PrintHelper.PrintCode('print(numList)')
print(numList)
PrintHelper.PrintCode('print(type(numList))')
print(type(numList))

PrintHelper.PrintTitle('ListComprehensions')
PrintHelper.PrintSubtitle('create list with range')
PrintHelper.PrintCode('sl=[x*x for x in range(1,5)]')
sl=[x*x for x in range(1,5)]
PrintHelper.PrintCode('print(sl)')
print(sl)
PrintHelper.PrintSubtitle('create list with range and filter')
PrintHelper.PrintCode('sl=[x*x for x in range(1,5) if x%2!=1]')
sl=[x*x for x in range(1,5) if x%2!=1]
PrintHelper.PrintCode('print(sl)')
print(sl)
PrintHelper.PrintSubtitle('create list with multiple range')
PrintHelper.PrintCode('tripleList=[(x,y,z)')
PrintHelper.PrintCode('            for x in range(1,2)')
PrintHelper.PrintCode('            for y in range(2,3)')
PrintHelper.PrintCode('            for z in range(3,4)')
PrintHelper.PrintCode('            if x!=y if x!=z if y!=z')
PrintHelper.PrintCode('            ]')
PrintHelper.PrintCode('print(tripleList)')
tripleList=[(x,y,z)
            for x in range(1,2)
            for y in range(2,3)
            for z in range(3,4)
            if x!=2
            if y!=3
            if z!=4
            ]
print(tripleList)
